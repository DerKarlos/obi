// https://docs.rs/geo/latest/geo/
// https://github.com/georust/geo
// https://www.geeksforgeeks.org/dsa/how-to-check-if-a-given-point-lies-inside-a-polygon/

//use i_float::float::compatible::FloatPointCompatible;

// primitives
use geo::{
    BoundingRect,
    Contains,
    Intersects,
    MultiPolygon,
    Point,
    Polygon, // LineString, MultiPolygon,
    Within,
    line_string,
    point,
    polygon,
};

fn main() {
    let point1 = point![x:1.0, y:2.0];
    let point2 = Point::new(1.0, 2.0);

    assert_eq!(point1.contains(&point2), true);

    // An L shape
    let poly = polygon![
                            //                          5   4
                            //
        (x: 0.0, y: 0.0),   // 0                        .   .
        (x: 4.0, y: 0.0),   // 1
        (x: 4.0, y: 1.0),   // 2                        .   .
        (x: 1.0, y: 1.0),   // 3
        (x: 1.0, y: 4.0),   // 4                        .  4  .  .  2
        (x: 0.0, y: 4.0),   // 5
    //  (x: 0.0, y: 0.0),   // 6 = 0 is not needed      0  .  .  .  1
    ];

    {
        // Points in linestring means ON the line but not inside => use as "0n the outer"
        let ln_s = poly.exterior();
        assert_eq!(ln_s.contains(&Point::new(0.0, 0.0)), true);
        assert_eq!(ln_s.intersects(&Point::new(0.0, 0.0)), true);
        assert_eq!(ln_s.contains(&Point::new(0.0, 0.5)), true);
        assert_eq!(ln_s.intersects(&Point::new(0.0, 0.5)), true);
        assert_eq!(ln_s.contains(&Point::new(0.5, 0.5)), false);
        assert_eq!(ln_s.intersects(&Point::new(0.5, 0.5)), false);
        assert_eq!(ln_s.contains(&Point::new(0.5, 0.00000000000000001)), false);
        assert_eq!(ln_s.contains(&Point::new(0.5, -0.0000000000000001)), false);
        assert_eq!(ln_s.contains(&Point::new(9.5, 9.5)), false);
    }

    {
        // Points in poly means INSIDE the polygon => use as "inside the outer"
        assert_eq!(poly.contains(&Point::new(0.0, 0.0)), false);
        assert_eq!(poly.intersects(&Point::new(0.0, 0.0)), true);
        assert_eq!(poly.contains(&Point::new(0.0, 0.5)), false);
        assert_eq!(poly.intersects(&Point::new(0.0, 0.5)), true);

        assert_eq!(poly.contains(&Point::new(0.5, 0.5)), true);
        assert_eq!(poly.contains(&Point::new(0.5, 0.00000000000000001)), true);
        assert_eq!(poly.contains(&Point::new(0.5, -0.000000000000001)), false);
        assert_eq!(poly.contains(&Point::new(9.5, 9.5)), false);
    }

    {
        // outside, one or two at the same point
        let out = polygon![
            (x: 0.0, y: 0.0),   // 0
            (x: 4.0, y: 0.0),   // 1
            (x: 0.0, y: -1.0),  // 2
        ];

        assert_eq!(poly.intersects(&out), true); // !!! a single identical point makes already a true
        assert_eq!(poly.contains(&out), false);
        assert_eq!(out.is_within(&poly), false);
    }

    // all points on the line or inside!
    let ins = polygon![
            (x: 0.0, y: 0.0),   // 0
            (x: 4.0, y: 0.0),   // 1                        .  .  .  .  2
            (x: 4.0, y: 1.0),   // 2
    //      (x: 0.0, y: 0.5),   // 4 = 0 is not needed      0  .  .  .  1
        ];

    assert_eq!(poly.contains(&ins), true); // what?? On the line is also inside ???
    assert_eq!(poly.intersects(&ins), true);
    assert_eq!(poly.is_within(&ins), false);
    assert_eq!(ins.is_within(&poly), true);

    // St.Pauls dome
    let dome = line_string![
        (x:-15.514121,y:12.540869),
        (x:-14.202905,y:16.01235),
        (x:-12.713897,y:18.384296),
        (x:-10.635953,y:20.624847),
        (x:-8.357993,y:22.326002 ),
        (x:-5.591105,y:23.681387),
        (x:-3.6131687,y:24.276094),
        (x:-0.6573768,y:24.670252),
        (x:2.3761992,y:24.511185 ),
        (x:5.0653033,y:23.868052),
        (x:7.365487,y:22.892986  ),
        (x:10.076816,y:21.101917),
        (x:12.443671,y:18.750713 ),
        (x:14.199368,y:16.081413),
        (x:15.299456,y:13.384455 ),
        (x:15.899503,y:10.452379),
        (x:15.955063,y:7.478814  ),
        (x:15.488359,y:4.6643004),
        (x:14.377159,y:1.649244  ),
        (x:13.188175,y:-0.37001503),
        (x:11.343583,y:-2.5898182),
        (x:9.043399,y:-4.498436),
        (x:6.1876154,y:-6.061292 ),
        (x:4.0763354,y:-6.7735686),
        (x:0.7316232,y:-7.2853045),
        (x:-1.7019048,y:-7.20924),
        (x:-4.968833,y:-6.5038843),
        (x:-7.6357126,y:-5.355948),
        (x:-10.158136,y:-3.647870),
        (x:-12.147184,y:-1.6908404),
        (x:-13.847321,y:0.7156864),
        (x:-15.214097,y:3.7791693),
        (x:-15.847481,y:6.6421084),
        (x:-15.947489,y:9.80240),

      //  (x:-15.514121,y:12.540869), // = index 0
    ];

    // St.Pauls building: 369161987 - footprint is a way
    // (x: -42.304521537722295, y: -28.14114000001041),
    // (x: -42.594938027016035, y: -24.896435999991127),
    // ...
    let outer = line_string![
            (x: -42.304521537722295, y: -28.14114000001041),
            (x: -42.594938027016035, y: -24.896435999991127),
            (x: -42.06937294311609, y: -24.840876000131402),
            (x: -42.138519984314605, y: -24.096372000116162),
            (x: -35.645027728696164, y: -23.518547999680095),
            (x: -35.59662438121385, y: -24.07414799985645),
            (x: -31.42668242474654, y: -23.707452000308535),
            (x: -31.4820009951303, y: -23.062955999882888),
            (x: -24.725729041513457, y: -22.47402000010652),
            (x: -24.69115449790453, y: -22.896276000303715),
            (x: -21.434036969103357, y: -22.60736400008568),
            (x: -21.475526725564116, y: -22.09621200042875),
            (x: -14.601696733558502, y: -21.48505200039267),
            (x: -14.567121767884405, y: -22.051763999909326),
            (x: -13.806436436838261, y: -22.007316000179458),
            (x: -13.675051210219456, y: -24.174156000235598),
            (x: -14.37349895829492, y: -24.218603999965467),
            (x: -14.179878784476944, y: -27.385523999865313),
            (x: -13.336208698225109, y: -27.32996400000559),
            (x: -13.287803449021878, y: -28.107804000410397),
            (x: -10.030683393811268, y: -27.9077879996521),
            (x: -10.086004357933561, y: -27.074388000177123),
            (x: -7.880014853003652, y: -26.941044000197962),
            (x: -7.845439097515223, y: -27.507755999714618),
            (x: -7.084753005576151, y: -27.46330799998475),
            (x: -6.6836727269326675, y: -34.063835999742764),
            (x: -7.105508284608862, y: -34.086060000002476),
            (x: -6.877307342402069, y: -37.886364000198114),
            (x: -5.929905461417457, y: -37.83080400033839),
            (x: -5.895329542628738, y: -38.50863600036405),
            (x: -5.23837195229043, y: -38.464187999844626),
            (x: -5.196880581725328, y: -39.13090799974043),
            (x: -1.0269284463350183, y: -38.875331999911964),
            (x: -1.0615050312056187, y: -38.25305999974603),
            (x: 3.606350731706843, y: -37.91969999979813),
            (x: 3.6824200489287042, y: -38.68642800007308),
            (x: 5.777768693537137, y: -38.48641200010434),
            (x: 6.469304524083454, y: -39.71984400030635),
            (x: 7.312978028790137, y: -40.76437199987993),
            (x: 8.336450612973806, y: -41.63110799974447),
            (x: 9.49131478502618, y: -42.29782800042983),
            (x: 10.749909042822738, y: -42.75342000022704),
            (x: 12.070741085159767, y: -42.964548000325635),
            (x: 13.412318666216933, y: -42.94232400006592),
            (x: 14.919863717544684, y: -42.62007600024788),
            (x: 16.323677357336294, y: -41.986691999952086),
            (x: 17.56843671310128, y: -41.07550800035767),
            (x: 18.60573441798779, y: -39.93097200040495),
            (x: 19.373332555683685, y: -38.59753199982379),
            (x: 19.926553628350394, y: -36.986291999944),
            (x: 22.001154810063213, y: -36.76405199971555),
            (x: 21.91125158767782, y: -35.88620399972115),
            (x: 26.13652147249632, y: -35.45283600018365),
            (x: 26.198762623748014, y: -36.052884000089875),
            (x: 30.652238253383107, y: -35.58618000016281),
            (x: 30.56924982848789, y: -34.863900000407284),
            (x: 31.004915824574628, y: -34.81945199988786),
            (x: 30.928842426883882, y: -34.05272400040246),
            (x: 31.26077830363979, y: -34.00827599988304),
            (x: 30.852750088047447, y: -30.17463600008739),
            (x: 30.202709354341522, y: -30.24130800007697),
            (x: 29.490391195346582, y: -23.540771999939807),
            (x: 30.26490680809778, y: -23.46298799982037),
            (x: 30.202665329618057, y: -22.862939999914147),
            (x: 32.09054674846568, y: -22.662923999945406),
            (x: 32.14587235028949, y: -23.140740000002324),
            (x: 35.769498186813884, y: -22.762932000324554),
            (x: 35.7141715414522, y: -22.185107999888487),
            (x: 36.31580392672759, y: -22.118435999898907),
            (x: 35.956182808181545, y: -18.673715999910883),
            (x: 35.31305893420627, y: -18.740387999900463),
            (x: 35.09867020555735, y: -16.729116000083195),
            (x: 35.81786218818016, y: -16.65133199996376),
            (x: 35.7348731796909, y: -15.906827999948518),
            (x: 42.463465492176, y: -15.195660000322846),
            (x: 42.51879227157403, y: -15.706811999979777),
            (x: 46.10092014670609, y: -15.329004000302007),
            (x: 46.04559300970857, y: -14.81785199985552),
            (x: 53.05079444603519, y: -14.07334799984028),
            (x: 53.106122282294784, y: -14.584500000286766),
            (x: 56.681333263598255, y: -14.20669199981944),
            (x: 56.62600507043742, y: -13.69554000016251),
            (x: 63.043403076985825, y: -13.01770800013685),
            (x: 63.112564190248115, y: -13.662203999772942),
            (x: 66.70160438948079, y: -13.284396000095171),
            (x: 66.64627460931214, y: -12.728795999918816),
            (x: 69.16344284165314, y: -12.462107999960494),
            (x: 69.21185682776435, y: -12.962148000277125),
            (x: 72.75248908500942, y: -12.595451999939655),
            (x: 73.12591503008507, y: -12.551004000209787),
            (x: 73.05675249667482, y: -11.895395999654284),
            (x: 73.34027956844207, y: -11.86206000005427),
            (x: 73.21578669885375, y: -10.661964000241824),
            (x: 73.58921249722138, y: -10.6175159997224),
            (x: 73.17423720322799, y: -6.6727560002073005),
            (x: 72.42738601568698, y: -6.750540000326737),
            (x: 72.00549570180843, y: -2.739108000032502),
            (x: 72.6970239551717, y: -2.6613239999130656),
            (x: 72.61402895469601, y: -1.8612600000381008),
            (x: 74.20453694576408, y: -1.2278759997423094),
            (x: 75.55300239559882, y: -0.12778800030901039),
            (x: 76.38282111475526, y: 0.9389640003138311),
            (x: 77.13659215292428, y: 0.6389399999659418),
            (x: 78.62332183173737, y: 4.3392359997824315),
            (x: 77.81422864581826, y: 4.6614839996004775),
            (x: 78.00783843416406, y: 5.839355999942768),
            (x: 77.97323669075111, y: 7.483932000212121),
            (x: 77.57212202719884, y: 9.339635999790517),
            (x: 77.21943102360578, y: 10.117476000195325),
            (x: 77.78647820273515, y: 10.473059999613383),
            (x: 76.02304052037641, y: 13.295508000225027),
            (x: 75.36609582110668, y: 12.884364000157689),
            (x: 74.27346827664381, y: 13.873331999871539),
            (x: 72.6345353344789, y: 14.828963999985376),
            (x: 70.82964170077585, y: 15.417899999761744),
            (x: 70.71898264986265, y: 16.47354000025473),
            (x: 70.09660934813131, y: 16.41797999960545),
            (x: 69.66780602028072, y: 20.540531999619134),
            (x: 70.30400949781307, y: 20.584980000138557),
            (x: 70.06192719226766, y: 24.063035999726594),
            (x: 69.52253759722794, y: 24.02970000012658),
            (x: 69.45337069373707, y: 25.074227999700156),
            (x: 68.94164222545409, y: 25.040892000100143),
            (x: 68.90705959333417, y: 25.507596000027206),
            (x: 65.33879110961351, y: 25.263132000328596),
            (x: 65.38720593618173, y: 24.64086000016266),
            (x: 64.89622316634099, y: 24.607523999773093),
            (x: 62.8285633123341, y: 24.463067999664077),
            (x: 62.79398068850338, y: 24.974220000110563),
            (x: 58.95601667203875, y: 24.718644000282097),
            (x: 59.0044311077354, y: 24.063035999726594),
            (x: 52.303554567150165, y: 23.32964399984121),
            (x: 52.2343952207656, y: 23.985251999607158),
            (x: 48.88049902240846, y: 23.618556000059243),
            (x: 48.956572983045, y: 22.985171999763452),
            (x: 42.44932073431288, y: 22.262892000007923),
            (x: 42.37324729801852, y: 22.929611999903727),
            (x: 38.47304472067353, y: 22.496243999576677),
            (x: 38.5629496091962, y: 21.640619999841988),
            (x: 31.924304462868466, y: 20.873891999567036),
            (x: 31.882808974663913, y: 21.49616399973297),
            (x: 31.22585949230696, y: 21.451716000003103),
            (x: 30.976895624058713, y: 23.818572000027984),
            (x: 31.50937016890302, y: 23.863019999757853),
            (x: 31.15667125055308, y: 27.241067999756297),
            (x: 30.395993782048066, y: 27.185507999896572),
            (x: 30.368330170741288, y: 27.618876000223622),
            (x: 26.772400303828192, y: 27.374411999735457),
            (x: 26.813894585826798, y: 26.85214799994867),
            (x: 24.656336266719507, y: 26.707691999839653),
            (x: 24.62175762106644, y: 27.196620000026428),
            (x: 23.91640204471544, y: 27.15217200029656),
            (x: 23.30091313200252, y: 33.97494000028303),
            (x: 23.964776196867934, y: 34.04161200027261),
            (x: 23.605165296450203, y: 37.953036000187694),
            (x: 23.14184454613531, y: 37.90858799966827),
            (x: 23.038111725210065, y: 38.84199600031195),
            (x: 22.45031688460155, y: 38.77532400032237),
            (x: 22.367330898154787, y: 39.48649199994804),
            (x: 19.539000653867376, y: 39.15313200000014),
            (x: 18.750664025275054, y: 39.06423599975085),
            (x: 18.826734272942076, y: 38.35306800012518),
            (x: 13.695629412200347, y: 37.83080400033839),
            (x: 13.578068274905629, y: 38.60864399995364),
            (x: 11.510412903036762, y: 38.36418000025503),
            (x: 10.611428620357371, y: 39.986532000264674),
            (x: 9.339022858634475, y: 41.31997200005628),
            (x: 7.783093814738377, y: 42.297827999640276),
            (x: 6.0266241671462595, y: 42.86453999994649),
            (x: 4.187172531392788, y: 42.964548000325635),
            (x: 2.575923793508435, y: 42.6756360001076),
            (x: 1.0753186577527603, y: 42.04225199981181),
            (x: -0.2593212686736318, y: 41.08661999969797),
            (x: -1.338098069483934, y: 39.864299999625814),
            (x: -2.1264355234801737, y: 38.41974000011476),
            (x: -2.582841990625406, y: 36.864060000094696),
            (x: -4.698905524869971, y: 36.63070799973639),
            (x: -4.602092964136961, y: 35.752859999741986),
            (x: -8.633679464742947, y: 35.20837199969549),
            (x: -8.730491336701986, y: 36.08621999968989),
            (x: -12.83814550225284, y: 35.60840399963297),
            (x: -12.734419063067293, y: 34.741667999768424),
            (x: -13.508926460272871, y: 34.65277200030869),
            (x: -13.439775686295896, y: 34.03050000014275),
            (x: -14.311096583587252, y: 33.952716000023315),
            (x: -13.958430560234873, y: 29.819051999879775),
            (x: -13.239244466472917, y: 29.885723999869356),
            (x: -12.706786155415147, y: 23.56299600019952),
            (x: -13.177023770669535, y: 23.52965999980995),
            (x: -13.11478832170592, y: 22.807380000054422),
            (x: -15.34150222912116, y: 22.618476000215537),
            (x: -15.389907454653518, y: 23.140740000002324),
            (x: -18.688486712563613, y: 22.862939999914147),
            (x: -18.640082233918605, y: 22.229555999618356),
            (x: -19.476828944015523, y: 22.151772000288474),
            (x: -19.165656057780442, y: 18.50703600033171),
            (x: -18.55019729773712, y: 18.562596000191434),
            (x: -18.370408241710905, y: 16.40686800026515),
            (x: -18.923629811734315, y: 16.362419999745725),
            (x: -18.868310238973372, y: 15.67347599959021),
            (x: -25.52771671078565, y: 15.106764000073554),
            (x: -25.569205800817585, y: 15.60680399960063),
            (x: -28.98535016396895, y: 15.31789200017215),
            (x: -28.93694690161552, y: 14.68450799987636),
            (x: -35.91445841056654, y: 14.095572000099992),
            (x: -35.96286143703926, y: 14.640060000146491),
            (x: -39.79392352934881, y: 14.317812000328445),
            (x: -39.74552082464296, y: 13.784435999622247),
            (x: -46.169812671628506, y: 13.239947999575747),
            (x: -46.23204342003041, y: 13.973340000250687),
            (x: -46.951232106154016, y: 13.917779999601407),
            (x: -47.19323986000468, y: 16.78467599994292),
            (x: -46.729916661104475, y: 16.818012000332487),
            (x: -47.0548984681626, y: 20.662764000257994),
            (x: -47.8017472601123, y: 20.607203999608714),
            (x: -47.8501483153379, y: 21.218363999644794),
            (x: -64.31540403946371, y: 19.6960200000143),
            (x: -67.53792136737785, y: 19.340435999806687),
            (x: -67.47569184628958, y: 18.75150000003032),
            (x: -74.5707646871998, y: 17.96254800028521),
            (x: -74.64682310236516, y: 18.607043999921302),
            (x: -78.11137663974453, y: 18.218124000113676),
            (x: -77.71034585604481, y: 14.662283999616648),
            (x: -76.99807186986942, y: 14.740067999736084),
            (x: -76.2651520477371, y: 8.183987999707938),
            (x: -76.92210454521914, y: 8.117315999718357),
            (x: -78.62326608219527, y: 7.928411999879472),
            (x: -77.94566540530458, y: 1.6501319999395037),
            (x: -77.4409175738442, y: -2.8057800000220823),
            (x: -76.76331112821966, y: -8.895156000123166),
            (x: -76.09261736015728, y: -14.917860000234668),
            (x: -75.57403826637004, y: -19.551563999905284),
            (x: -74.87568595979053, y: -25.952075999694557),
            (x: -73.11919121701312, y: -25.807620000375096),
            (x: -72.39999628155036, y: -25.72983600025566),
            (x: -72.03353164798035, y: -29.074547999864535),
            (x: -71.67398123491745, y: -32.37481199974354),
            (x: -72.34476976325799, y: -32.45259599986298),
            (x: -71.94373107065242, y: -36.01954799970031),
            (x: -68.56904073815105, y: -35.66396400028225),
            (x: -68.63818598843908, y: -35.063916000376025),
            (x: -65.18742752786449, y: -34.6861079999087),
            (x: -61.729754245572366, y: -34.30830000023093),
    //
            (x: -61.6675236596912, y: -34.91946000026701),
            (x: -58.25825796867822, y: -34.55276399992954), // ===
    // 12 coord:-58.25825799576663     -34.552764011096144) false false

            (x: -41.96570923027711, y: -32.81929200020045),
            (x: -42.02102637389582, y: -32.152572000304644),
            (x: -41.4954606339946, y: -32.10812399978522),
            (x: -41.848109587174015, y: -28.107804000410397),
        ];

    println!("dome brect: {:?}", dome.bounding_rect());
    println!("outer brect: {:?}", outer.bounding_rect());

    let point0 = Point::new(0.0, 0.0); // is on the line border!

    // the dome is not ON the LineString of course
    assert_eq!(outer.intersects(&point0), false);
    assert_eq!(outer.contains(&point0), false);
    assert_eq!(outer.contains(&dome), false);
    assert_eq!(outer.intersects(&dome), false);

    // So let's try polygons
    let dome_polygon = Polygon::new(dome, vec![]);
    let outer_polygon = Polygon::new(outer, vec![]);

    assert_eq!(outer_polygon.intersects(&point0), true);
    assert_eq!(outer_polygon.contains(&point0), true);

    assert_eq!(outer_polygon.contains(&dome_polygon), true);
    assert_eq!(outer_polygon.intersects(&dome_polygon), true);

    // hole in part (in St.Pauls outer outer)
    let hole = polygon![
        ( x: -46.557167,y: 7.3988233 ),
        ( x: -62.413925,y: 5.654239  ),
        ( x: -62.09586 ,y: 2.6762233 ),
        ( x: -46.03855 ,y: 4.3207994 ),
        ( x: -45.851852,y: 2.5651033 ),
        ( x: -16.254417,y: 5.720911  ),
        ( x: -17.27785 ,y: 14.621623 ),
        ( x: -47.061943,y: 11.665832 ),
    ];

    // Part (with holes)(in St.Pauls outer outer)
    // Relation: 9235275 with outer: 664646816
    // (x: -66.51500759205027, y: -22.151772000288474),
    // Part other 0 0
    // (x: -66.51500759205027, y: -22.151772000288474),
    // Part other_exterior
    // (x: -66.51500759205027, y: -22.151772000288474),
    // Part other_exterior
    // (x: -66.51500759205027, y: -22.151772000288474),
    //
    // (x: -58.65239047024101, y: -30.952475999702642),
    // (x: -58.25825796867822, y: -34.55276399992954), // ===
    // (x: -41.96570923027711, y: -32.81929200020045),
    //
    let part = polygon![
        (x: -66.51500759205027, y: -22.151772000288474),
        (x: -62.95361283879499, y: -21.762851999691293),
        (x: -63.02275856480637, y: -21.16280399978507),
        (x: -59.75180853961854, y: -20.80722000036701),
        (x: -59.37842084275689, y: -24.174156000235598),
        (x: -59.99388537896276, y: -24.24082800022518),
        (x: -59.606668766326365, y: -27.76333200033264),
        (x: -59.25402515636905, y: -31.019147999692223),
        (x: -58.65239047024101, y: -30.952475999702642),
        (x: -58.25825796867822, y: -34.55276399992954), // ===
        (x: -41.96570923027711, y: -32.81929200020045),
        //
        (x: -42.02102637389582, y: -32.152572000304644),
        (x: -41.4954606339946, y: -32.10812399978522),
        (x: -41.848109587174015, y: -28.107804000410397),
        (x: -42.304521537722295, y: -28.14114000001041),
        (x: -42.594938027016035, y: -24.896435999991127),
        (x: -42.06937294311609, y: -24.840876000131402),
        (x: -42.138519984314605, y: -24.096372000116162),
        (x: -35.645027728696164, y: -23.518547999680095),
        (x: -35.59662438121385, y: -24.07414799985645),
        (x: -31.42668242474654, y: -23.707452000308535),
        (x: -31.4820009951303, y: -23.062955999882888),
        (x: -24.725729041513457, y: -22.47402000010652),
        (x: -24.69115449790453, y: -22.896276000303715),
        (x: -21.434036969103357, y: -22.60736400008568),
        (x: -21.475526725564116, y: -22.09621200042875),
        (x: -14.601696733558502, y: -21.48505200039267),
        (x: -14.567121767884405, y: -22.051763999909326),
        (x: -13.806436436838261, y: -22.007316000179458),
        (x: -13.675051210219456, y: -24.174156000235598),
        (x: -14.37349895829492, y: -24.218603999965467),
        (x: -14.179878784476944, y: -27.385523999865313),
        (x: -13.336208698225109, y: -27.32996400000559),
        (x: -13.287803449021878, y: -28.107804000410397),
        (x: -10.030683393811268, y: -27.9077879996521),
        (x: -10.086004357933561, y: -27.074388000177123),
        (x: -7.880014853003652, y: -26.941044000197962),
        (x: -7.845439097515223, y: -27.507755999714618),
        (x: -7.084753005576151, y: -27.46330799998475),
        (x: -6.6836727269326675, y: -34.063835999742764),
        (x: -7.105508284608862, y: -34.086060000002476),
        (x: -6.877307342402069, y: -37.886364000198114),
        (x: -5.929905461417457, y: -37.83080400033839),
        (x: -5.895329542628738, y: -38.50863600036405),
        (x: -5.23837195229043, y: -38.464187999844626),
        (x: -5.196880581725328, y: -39.13090799974043),
        (x: -1.0269284463350183, y: -38.875331999911964),
        (x: -1.0615050312056187, y: -38.25305999974603),
        (x: 3.606350731706843, y: -37.91969999979813),
        (x: 3.6824200489287042, y: -38.68642800007308),
        (x: 5.777768693537137, y: -38.48641200010434),
        (x: 19.926553628350394, y: -36.986291999944),
        (x: 22.001154810063213, y: -36.76405199971555),
        (x: 21.91125158767782, y: -35.88620399972115),
        (x: 26.13652147249632, y: -35.45283600018365),
        (x: 26.198762623748014, y: -36.052884000089875),
        (x: 30.652238253383107, y: -35.58618000016281),
        (x: 30.56924982848789, y: -34.863900000407284),
        (x: 31.004915824574628, y: -34.81945199988786),
        (x: 30.928842426883882, y: -34.05272400040246),
        (x: 31.26077830363979, y: -34.00827599988304),
        (x: 30.852750088047447, y: -30.17463600008739),
        (x: 30.202709354341522, y: -30.24130800007697),
        (x: 29.490391195346582, y: -23.540771999939807),
        (x: 30.26490680809778, y: -23.46298799982037),
        (x: 30.202665329618057, y: -22.862939999914147),
        (x: 32.09054674846568, y: -22.662923999945406),
        (x: 32.14587235028949, y: -23.140740000002324),
        (x: 35.769498186813884, y: -22.762932000324554),
        (x: 35.7141715414522, y: -22.185107999888487),
        (x: 36.31580392672759, y: -22.118435999898907),
        (x: 35.956182808181545, y: -18.673715999910883),
        (x: 35.31305893420627, y: -18.740387999900463),
        (x: 35.09867020555735, y: -16.729116000083195),
        (x: 35.81786218818016, y: -16.65133199996376),
        (x: 35.7348731796909, y: -15.906827999948518),
        (x: 42.463465492176, y: -15.195660000322846),
        (x: 42.51879227157403, y: -15.706811999979777),
        (x: 46.10092014670609, y: -15.329004000302007),
        (x: 46.04559300970857, y: -14.81785199985552),
        (x: 53.05079444603519, y: -14.07334799984028),
        (x: 53.106122282294784, y: -14.584500000286766),
        (x: 56.681333263598255, y: -14.20669199981944),
        (x: 56.62600507043742, y: -13.69554000016251),
        (x: 63.043403076985825, y: -13.01770800013685),
        (x: 63.112564190248115, y: -13.662203999772942),
        (x: 66.70160438948079, y: -13.284396000095171),
        (x: 66.64627460931214, y: -12.728795999918816),
        (x: 69.16344284165314, y: -12.462107999960494),
        (x: 69.21185682776435, y: -12.962148000277125),
        (x: 72.75248908500942, y: -12.595451999939655),
        (x: 73.12591503008507, y: -12.551004000209787),
        (x: 73.05675249667482, y: -11.895395999654284),
        (x: 73.34027956844207, y: -11.86206000005427),
        (x: 73.21578669885375, y: -10.661964000241824),
        (x: 73.58921249722138, y: -10.6175159997224),
        (x: 73.17423720322799, y: -6.6727560002073005),
        (x: 72.42738601568698, y: -6.750540000326737),
        (x: 72.00549570180843, y: -2.739108000032502),
        (x: 72.6970239551717, y: -2.6613239999130656),
        (x: 72.61402895469601, y: -1.8612600000381008),
        (x: 74.20453694576408, y: -1.2278759997423094),
        (x: 75.55300239559882, y: -0.12778800030901039),
        (x: 76.38282111475526, y: 0.9389640003138311),
        (x: 77.13659215292428, y: 0.6389399999659418),
        (x: 78.62332183173737, y: 4.3392359997824315),
        (x: 77.81422864581826, y: 4.6614839996004775),
        (x: 78.00783843416406, y: 5.839355999942768),
        (x: 77.97323669075111, y: 7.483932000212121),
        (x: 77.57212202719884, y: 9.339635999790517),
        (x: 77.21943102360578, y: 10.117476000195325),
        (x: 77.78647820273515, y: 10.473059999613383),
        (x: 76.02304052037641, y: 13.295508000225027),
        (x: 75.36609582110668, y: 12.884364000157689),
        (x: 74.27346827664381, y: 13.873331999871539),
        (x: 72.6345353344789, y: 14.828963999985376),
        (x: 70.82964170077585, y: 15.417899999761744),
        (x: 70.71898264986265, y: 16.47354000025473),
        (x: 70.09660934813131, y: 16.41797999960545),
        (x: 69.66780602028072, y: 20.540531999619134),
        (x: 70.30400949781307, y: 20.584980000138557),
        (x: 70.06192719226766, y: 24.063035999726594),
        (x: 69.52253759722794, y: 24.02970000012658),
        (x: 69.45337069373707, y: 25.074227999700156),
        (x: 68.94164222545409, y: 25.040892000100143),
        (x: 68.90705959333417, y: 25.507596000027206),
        (x: 65.33879110961351, y: 25.263132000328596),
        (x: 65.38720593618173, y: 24.64086000016266),
        (x: 64.89622316634099, y: 24.607523999773093),
        (x: 62.8285633123341, y: 24.463067999664077),
        (x: 62.79398068850338, y: 24.974220000110563),
        (x: 58.95601667203875, y: 24.718644000282097),
        (x: 59.0044311077354, y: 24.063035999726594),
        (x: 52.303554567150165, y: 23.32964399984121),
        (x: 52.2343952207656, y: 23.985251999607158),
        (x: 48.88049902240846, y: 23.618556000059243),
        (x: 48.956572983045, y: 22.985171999763452),
        (x: 42.44932073431288, y: 22.262892000007923),
        (x: 42.37324729801852, y: 22.929611999903727),
        (x: 38.47304472067353, y: 22.496243999576677),
        (x: 38.5629496091962, y: 21.640619999841988),
        (x: 31.924304462868466, y: 20.873891999567036),
        (x: 31.882808974663913, y: 21.49616399973297),
        (x: 31.22585949230696, y: 21.451716000003103),
        (x: 30.976895624058713, y: 23.818572000027984),
        (x: 31.50937016890302, y: 23.863019999757853),
        (x: 31.15667125055308, y: 27.241067999756297),
        (x: 30.395993782048066, y: 27.185507999896572),
        (x: 30.368330170741288, y: 27.618876000223622),
        (x: 26.772400303828192, y: 27.374411999735457),
        (x: 26.813894585826798, y: 26.85214799994867),
        (x: 24.656336266719507, y: 26.707691999839653),
        (x: 24.62175762106644, y: 27.196620000026428),
        (x: 23.91640204471544, y: 27.15217200029656),
        (x: 23.30091313200252, y: 33.97494000028303),
        (x: 23.964776196867934, y: 34.04161200027261),
        (x: 23.605165296450203, y: 37.953036000187694),
        (x: 23.14184454613531, y: 37.90858799966827),
        (x: 23.038111725210065, y: 38.84199600031195),
        (x: 22.45031688460155, y: 38.77532400032237),
        (x: 22.367330898154787, y: 39.48649199994804),
        (x: 19.539000653867376, y: 39.15313200000014),
        (x: 18.750664025275054, y: 39.06423599975085),
        (x: 18.826734272942076, y: 38.35306800012518),
        (x: 13.695629412200347, y: 37.83080400033839),
        (x: 13.578068274905629, y: 38.60864399995364),
        (x: 11.510412903036762, y: 38.36418000025503),
        (x: -2.582841990625406, y: 36.864060000094696),
        (x: -4.698905524869971, y: 36.63070799973639),
        (x: -4.602092964136961, y: 35.752859999741986),
        (x: -8.633679464742947, y: 35.20837199969549),
        (x: -8.730491336701986, y: 36.08621999968989),
        (x: -12.83814550225284, y: 35.60840399963297),
        (x: -12.734419063067293, y: 34.741667999768424),
        (x: -13.508926460272871, y: 34.65277200030869),
        (x: -13.439775686295896, y: 34.03050000014275),
        (x: -14.311096583587252, y: 33.952716000023315),
        (x: -13.958430560234873, y: 29.819051999879775),
        (x: -13.239244466472917, y: 29.885723999869356),
        (x: -12.706786155415147, y: 23.56299600019952),
        (x: -13.177023770669535, y: 23.52965999980995),
        (x: -13.11478832170592, y: 22.807380000054422),
        (x: -15.34150222912116, y: 22.618476000215537),
        (x: -15.389907454653518, y: 23.140740000002324),
        (x: -18.688486712563613, y: 22.862939999914147),
        (x: -18.640082233918605, y: 22.229555999618356),
        (x: -19.476828944015523, y: 22.151772000288474),
        (x: -19.165656057780442, y: 18.50703600033171),
        (x: -18.55019729773712, y: 18.562596000191434),
        (x: -18.370408241710905, y: 16.40686800026515),
        (x: -18.923629811734315, y: 16.362419999745725),
        (x: -18.868310238973372, y: 15.67347599959021),
        (x: -25.52771671078565, y: 15.106764000073554),
        (x: -25.569205800817585, y: 15.60680399960063),
        (x: -28.98535016396895, y: 15.31789200017215),
        (x: -28.93694690161552, y: 14.68450799987636),
        (x: -35.91445841056654, y: 14.095572000099992),
        (x: -35.96286143703926, y: 14.640060000146491),
        (x: -39.79392352934881, y: 14.317812000328445),
        (x: -39.74552082464296, y: 13.784435999622247),
        (x: -46.169812671628506, y: 13.239947999575747),
        (x: -46.23204342003041, y: 13.973340000250687),
        (x: -46.951232106154016, y: 13.917779999601407),
        (x: -47.19323986000468, y: 16.78467599994292),
        (x: -46.729916661104475, y: 16.818012000332487),
        (x: -47.0548984681626, y: 20.662764000257994),
        (x: -47.8017472601123, y: 20.607203999608714),
        (x: -47.8501483153379, y: 21.218363999644794),
        (x: -64.31540403946371, y: 19.6960200000143),
        (x: -63.94202180525398, y: 16.37353199987558),
        (x: -64.55056620373838, y: 16.306859999886),
        (x: -63.796887597549066, y: 9.517428000289101),
        (x: -63.20217294648451, y: 9.584100000278681),
        (x: -62.80113155643798, y: 5.983812000051785),
        (x: -66.21037041973499, y: 5.606003999584459),
        (x: -66.2795152402038, y: 6.217163999620539),
        (x: -69.66109307801611, y: 5.839355999942768),
        (x: -69.18399694189337, y: 1.5723479998200673),
        (x: -67.03359509797069, y: -17.506955999698448),
    ];

    assert_eq!(part.contains(&hole), true);

    // difference would change values in details! Whay ever.
    // Don't test inside with the difference but the original!
    //let part = part.difference(&hole);
    let part = MultiPolygon::new(vec![part]);

    let rect = outer_polygon.bounding_rect().unwrap();
    println!("rect: {:?}", rect);
    for poly in part.iter() {
        println!("poly");
        let (out, _hol) = poly.clone().into_inner();
        for (index, coord) in out.0.iter().enumerate() {
            if index == 0 {
                println!("=?= {index} index coord: {:?}", coord);
            }
            // for rects, contains means NOT on the line!
            //(x: 78.623276,y: 4.176343),
            if !rect.contains(coord) {
                println!("{index} in rect no coord: {:?}", coord);
            }
            let line_string = outer_polygon.exterior();
            // MultiPoly with holes has more digits and so is not ON the line
            let on_line = line_string.contains(coord);
            // for polygons, contains means NOT on the line
            let contains = outer_polygon.contains(coord);
            //if index == 12 {
            //    println!("{index} index 12 coord: {:?}", coord);
            //}
            println!("{index} coord: {:?} {contains} {on_line}", coord);
            assert_eq!(on_line || contains, true);
        }
        assert_eq!(outer_polygon.contains(&out), true);
    }

    // Ok for polygons but NOT for more digits because of MultiPolygons subtraction !!!
    assert_eq!(outer_polygon.contains(&part), true);

    //let render = outer_polygon.difference(&part);
}

// 12 coord: COORD(-58.25825799576663 -34.552764011096144) false false
